name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Set up packer and dependencies
      run: |
        wget https://releases.hashicorp.com/packer/1.8.0/packer_1.8.0_linux_amd64.zip
        unzip packer_1.8.0_linux_amd64.zip
        pip install -r requirements.txt

    - name: Build Base Image
      run: |
        .bin/build-base.sh

    - name: Save Base Image
      run: |
        docker save -o /tmp/base-image.tar toolisticon/base-builder-image

    - name: Upload Base Image
      uses: actions/upload-artifact@v2
      with:
        name: base-image
        path: /tmp/base-image.tar


  build:
    needs: [prepare]
    name: Building ${{ matrix.image }} image(s)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ['ansible', 'java', 'nodejs', 'terraform']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Set up packer and dependencies
      run: |
        wget https://releases.hashicorp.com/packer/1.8.0/packer_1.8.0_linux_amd64.zip
        unzip packer_1.8.0_linux_amd64.zip
        pip install -r requirements.txt

    - name: Download Base Image
      uses: actions/download-artifact@v2
      with:
        name: base-image
        path: /tmp

    - name: Load Base Image
      run: |
        docker load --input /tmp/base-image.tar

    - name: Build Image(s)
      run: |
        source ./.bin/_bash.inc
        export image=${{matrix.image}}

        prepareImage "${currentDir}/docker/${image}"
        for entry in ${currentDir}/docker/${image}/*.pkr.hcl;
        do
          buildImage "${currentDir}/docker/${image}" "$entry"
          imageName=$(cat "$entry" | grep 'repository' | cut -d'"' -f2)
          fileName=$(echo "$imageName" | cut -d'/' -f2 | cut -d'-' -f1)
          mkdir -p /tmp/docker-images/
          docker save -o /tmp/docker-images/$fileName-image.tar $imageName
        done

    - name: Upload Image(s)
      uses: actions/upload-artifact@v2
      with:
        name: docker-images-${{matrix.image}}
        path: /tmp/docker-images/

  deploy:
    needs: [build]
    name: Deploy ${{ matrix.image }} image(s)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ['ansible', 'java', 'nodejs', 'terraform']
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Download Images
        uses: actions/download-artifact@v2
        with:
          name: docker-images-${{matrix.image}}
          path: /tmp/docker-images/

      - name: Load Images
        run: |
          for entry in /tmp/docker-images/*.tar;
          do
            docker load --input $entry
          done

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Release Images
        run: |
          source ./.bin/_bash.inc
          export image=${{matrix.image}}

          for entry in ${currentDir}/docker/${image}/*.pkr.hcl;
          do
            imageName=$(cat "$entry" | grep 'repository' | cut -d'"' -f2)
            fileName=$(echo "$imageName" | cut -d'/' -f2 | cut -d'-' -f1)
            docker tag ${imageName}:${IMAGE_TAG} ${imageName}:${MAJOR_DOCKER_TAG}
            docker tag ${imageName}:${IMAGE_TAG} ${imageName}:${MINOR_DOCKER_TAG}
            docker tag ${imageName}:${IMAGE_TAG} ${imageName}:latest
            docker push ${imageName}:latest
            docker push ${imageName}:${MAJOR_DOCKER_TAG}
            docker push ${imageName}:${MINOR_DOCKER_TAG}
          done
        if: github.ref == 'refs/heads/main'

      - name: Push Snaphot Images
        run: |
          source ./.bin/_bash.inc
          export image=${{matrix.image}}

          for entry in ${currentDir}/docker/${image}/*.pkr.hcl;
          do
            timeStamp=$(date +%s)
            imageName=$(cat "$entry" | grep 'repository' | cut -d'"' -f2)
            fileName=$(echo "$imageName" | cut -d'/' -f2 | cut -d'-' -f1)
            docker tag ${imageName}:${IMAGE_TAG} ${imageName}:${timeStamp}
            docker push ${imageName}:${timeStamp}
          done
        if: github.ref == 'refs/heads/develop'
